# name: Databricks job migration

# on:
#   workflow_dispatch:
#     inputs:
#       source_env:
#         type: choice
#         description: "Select source environment"
#         required: true
#         options:
#         - Dev
#         - Test
#         - Prod
#       target_env:
#         description: "Select target environment"
#         required: true
#         type: choice
#         options: ["Dev", "Test", "Prod"]
        
# jobs:
#   databricks_migration:
#     runs-on: ubuntu-latest

#     env:
#       SOURCE_ENV: ${{ github.event.inputs.source_env }}
#       TARGET_ENV: ${{ github.event.inputs.target_env }}
#       JOB_ID: ${{ github.event.inputs.job_id }}
#       DATABRICKS_API_TOKEN: ${{secrets.DATABRICKS_API_TOKEN}}
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
        
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.9

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#           pip install requests
  
#       - name: Call Databricks API
#         run: |
#           python .github/workflows/apicall.py

      
#       - name: Select Databricks Job ID
#         run: |
#           # Python script to prompt the user to select a job ID and list its details
#           python .github/workflows/select_job_id.py

name: Databricks Job Migration

on:
  workflow_dispatch:
    inputs:
      source_env:
        type: choice
        description: "Select source environment"
        required: true
        options:
        - Dev
        - Test
        - Prod
      target_env:
        description: "Select target environment"
        required: true
        type: choice
        options: ["Dev", "Test", "Prod"]
      # job_id:
      #   description: "Enter the Databricks Job ID"
      #   required: true

jobs:
  databricks_migration:
    runs-on: ubuntu-latest

    env:
      SOURCE_ENV: ${{ github.event.inputs.source_env }}
      TARGET_ENV: ${{ github.event.inputs.target_env }}
      JOB_ID: ${{ github.event.inputs.job_id }}
      DATABRICKS_API_TOKEN: ${{ secrets.DATABRICKS_API_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests
  
      - name: Call Databricks API and Publish Artifacts
        run: |
          python .github/workflows/apicall.py > api_response.json
 

      - name: Publish Response as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: databricks-api-response
          path: api_response.json


      - name: Download and Process API Response
        uses: actions/download-artifact@v2
        with:
          name: databricks-api-response
          path: .

      - name: Debug Current Directory
        run: |
          pwd




      # - name: Fetch Job Details
      #   run: python .github/workflows/fetch_job_details.py
      #   env:
      #     DATABRICKS_API_TOKEN: ${{ secrets.DATABRICKS_API_TOKEN }}
      #     JOB_ID: ${{ env.JOB_ID }}


      - name: Set JOB_ID from Artifact
        id: download
        run: echo "JOB_ID=$(cat api_response.json | jq -r '.job_id')" >> $GITHUB_ENV

      - name: Fetch Job Details
        run: python .github/workflows/fetch_job_details.py ${{ env.JOB_ID }}
        env:
          DATABRICKS_API_TOKEN: "dapic100eda776087528cd6a82f7ca84914a"


      # - name: Set JOB_ID from Artifact
      #   run: echo "JOB_ID=${{ steps.download.outputs.job_id }}" >> $GITHUB_ENV

        
      - name: Select Databricks Job ID
        run: |
          # Python script to prompt the user to select a job ID and list its details
          python .github/workflows/select_job_id.py







